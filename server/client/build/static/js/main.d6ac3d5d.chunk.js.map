{"version":3,"sources":["components/Navbar.js","util/methods.js","routes/Home.js","util/validation.js","routes/SignIn.js","routes/Profile.js","routes/SignUp.js","routes/CreatePost.js","reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useContext","UserContext","state","dispatch","className","to","style","paddingLeft","id","console","log","onClick","localStorage","clear","type","defaultOptions","credentials","resolveAPIUrl","path","query","params","qs","Object","keys","map","k","encodeURIComponent","join","checkOk","r","a","status","data","json","errorCode","error","Error","errorMsg","headers","get","doFetch","opt","hints","options","method","token","getItem","fetch","response","checkResponse","message","GET","url","Accept","then","x","POST","body","JSON","stringify","PUT","DELETE","Home","useState","setData","postId","res","newData","d","_id","text","filter","M","toast","html","classes","useEffect","posts","item","key","postedBy","name","float","color","deletePost","src","photo","likes","includes","unlikePost","likePost","length","title","comments","comment","fontWeight","onSubmit","e","preventDefault","addComment","target","value","placeholder","emailRegex","SignIn","history","useHistory","password","setPassword","email","setEmail","signIn","test","err","setItem","user","payload","push","onChange","Profile","myposts","setMyPosts","getData","maxWidth","margin","display","justifyContent","borderBottom","width","height","borderRadius","post","alt","SignUp","setName","signUp","CreatePost","setTitle","setBody","image","setImage","setUrl","postDetails","FormData","append","catch","createPost","padding","textAlign","files","reducer","action","createContext","Routing","parse","exact","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6ac3d5d.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"./../App\";\r\n\r\nconst Navbar = () => {\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const renderList = () => {\r\n        console.log(state);\r\n\r\n        if (state) {\r\n            return [\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>,\r\n                <li>\r\n                    <Link to=\"/profile\">Profile</Link>\r\n                </li>,\r\n                <li>\r\n                    <Link to=\"/create\">Create Post</Link>\r\n                </li>,\r\n                <li>\r\n                    <button\r\n                        className=\"btn #c62828 red darken-3\"\r\n                        onClick={() => {\r\n                            localStorage.clear();\r\n                            dispatch({ type: \"CLEAR\" });\r\n                        }}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </li>,\r\n            ];\r\n        } else {\r\n            return [\r\n                <li>\r\n                    <Link to=\"/signin\">Login</Link>\r\n                </li>,\r\n                <li>\r\n                    <Link to=\"/signup\">Sign Up</Link>\r\n                </li>,\r\n            ];\r\n        }\r\n    };\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper white\">\r\n                <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo left\" style={{ paddingLeft: \"10px\" }}>\r\n                    Instagram\r\n                </Link>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    {renderList()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","const defaultOptions = {\r\n    credentials: \"same-origin\",\r\n};\r\n\r\nfunction urlEncode(params) {\r\n    return Object.keys(params)\r\n        .map((k) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\r\n        .join(\"&\");\r\n}\r\n\r\nexport function resolveAPIUrl(path, query) {\r\n    let qs = \"\";\r\n    if (typeof query == \"object\" && query) qs = \"?\" + urlEncode(query);\r\n    return path + qs;\r\n}\r\n\r\nexport async function checkOk(r) {\r\n    if (r.status >= 400) {\r\n        let data = null;\r\n        try {\r\n            data = await r.json();\r\n        } catch (e) {}\r\n\r\n        if (data)\r\n            if (data.errorCode) {\r\n                // Handle specific errors here\r\n            } else if (data.error) {\r\n                throw new Error(data.error);\r\n            }\r\n\r\n        let errorMsg = r.headers.get(\"error\");\r\n        if (errorMsg) throw new Error(errorMsg);\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport async function doFetch(path, opt = {}, hints = {}) {\r\n    let options = {\r\n        method: \"GET\",\r\n        ...opt,\r\n        headers: {\r\n            ...opt.headers,\r\n        },\r\n    };\r\n    let token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n        options.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n\r\n    try {\r\n        let response = await fetch(resolveAPIUrl(path, opt && opt.query), options);\r\n        response = checkOk(response);\r\n        if (hints.checkResponse) hints.checkResponse(response);\r\n        return response;\r\n    } catch (e) {\r\n        if (!e.response) {\r\n            e.message = \"Check connection.\";\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport function GET(url, hints) {\r\n    return doFetch(\r\n        url,\r\n        {\r\n            ...defaultOptions,\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            },\r\n        },\r\n        hints\r\n    ).then((x) => x.json());\r\n}\r\n\r\nexport function PATCH(url, data, hints) {\r\n    return doFetch(\r\n        url,\r\n        {\r\n            ...defaultOptions,\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data, null, 2),\r\n        },\r\n        hints\r\n    ).then((x) => x.json());\r\n}\r\n\r\nexport function POST(url, data, hints) {\r\n    return doFetch(\r\n        url,\r\n        {\r\n            ...defaultOptions,\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(data, null, 2),\r\n        },\r\n        hints\r\n    ).then((x) => x.json());\r\n}\r\n\r\nexport function PUT(url, data, hints) {\r\n    return doFetch(\r\n        url,\r\n        {\r\n            ...defaultOptions,\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n            body: JSON.stringify(data, null, 2),\r\n        },\r\n        hints\r\n    ).then((x) => x.json());\r\n}\r\n\r\nexport function DELETE(url, hints) {\r\n    return doFetch(\r\n        url,\r\n        {\r\n            ...defaultOptions,\r\n            method: \"DELETE\",\r\n            headers: {},\r\n        },\r\n        hints\r\n    ).then((x) => x.json());\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { GET, PUT, DELETE } from \"../util/methods\";\r\nimport { UserContext } from \"./../App\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await GET(\"/allpost\");\r\n            setData(response.posts);\r\n        })();\r\n    }, []);\r\n\r\n    async function likePost(id) {\r\n        let res = await PUT(\"/like\", { postId: id });\r\n        let newData = data.map((d) => (d._id == res._id ? res : d));\r\n        setData(newData);\r\n    }\r\n\r\n    async function unlikePost(id) {\r\n        let res = await PUT(\"/unlike\", { postId: id });\r\n        console.log(res);\r\n        let newData = data.map((d) => (d._id == res._id ? res : d));\r\n        setData(newData);\r\n    }\r\n\r\n    async function addComment(text, postId) {\r\n        let res = await PUT(\"/comment\", { text, postId });\r\n        console.log(res);\r\n        let newData = data.map((d) => (d._id == res._id ? res : d));\r\n        setData(newData);\r\n    }\r\n\r\n    async function deletePost(postId) {\r\n        let res = await DELETE(`/deletepost/${postId}`);\r\n        let newData = data.filter((d) => d._id != res._id);\r\n        setData(newData);\r\n        M.toast({\r\n            html: res,\r\n            classes: \"#43a047 green darken-1\",\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {data.map((item) => {\r\n                return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                        <h5>\r\n                            {item.postedBy.name}\r\n                            {item.postedBy._id == state._id && (\r\n                                <i\r\n                                    className=\"material-icons\"\r\n                                    style={{ float: \"right\", color: \"red\" }}\r\n                                    onClick={() => {\r\n                                        deletePost(item._id);\r\n                                    }}\r\n                                >\r\n                                    delete\r\n                                </i>\r\n                            )}\r\n                        </h5>\r\n                        <div className=\"card-image\">\r\n                            <img src={item.photo} />\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            {!item.likes.includes(state._id) ? (\r\n                                <i\r\n                                    className=\"material-icons\"\r\n                                    style={{ color: \"blue\" }}\r\n                                    onClick={() => {\r\n                                        likePost(item._id);\r\n                                    }}\r\n                                >\r\n                                    thumb_up\r\n                                </i>\r\n                            ) : (\r\n                                <i\r\n                                    className=\"material-icons\"\r\n                                    style={{ color: \"grey\" }}\r\n                                    onClick={() => {\r\n                                        unlikePost(item._id);\r\n                                    }}\r\n                                >\r\n                                    thumb_down\r\n                                </i>\r\n                            )}\r\n                            <h6>{item.likes.length} likes </h6>\r\n                            <h6>{item.title}</h6>\r\n                            <p>{item.body}</p>\r\n                            {item.comments.map((comment) => {\r\n                                return (\r\n                                    <h6 key={comment._id}>\r\n                                        <span style={{ fontWeight: \"500\" }}>\r\n                                            {comment.postedBy.name}: {comment.text}\r\n                                        </span>\r\n                                    </h6>\r\n                                );\r\n                            })}\r\n                            <form\r\n                                onSubmit={(e) => {\r\n                                    e.preventDefault();\r\n                                    const text = e.target[\"comment\"].value;\r\n                                    addComment(text, item._id);\r\n                                }}\r\n                            >\r\n                                <input type=\"text\" id=\"comment\" placeholder=\"Add a comment\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","export const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { emailRegex } from \"./../util/validation\";\r\nimport { POST } from \"./../util/methods\";\r\nimport M from \"materialize-css\";\r\nimport { UserContext } from \"./../App\";\r\n\r\nconst SignIn = () => {\r\n    const history = useHistory();\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const { dispatch } = useContext(UserContext);\r\n\r\n    async function signIn() {\r\n        if (!emailRegex.test(email)) {\r\n            M.toast({ html: \"Invalid email\", classes: \"#c62828 red darken-3\" });\r\n            return;\r\n        }\r\n\r\n        let data = await POST(\"/signin\", {\r\n            email,\r\n            password,\r\n        });\r\n\r\n        if (data.err) {\r\n            M.toast({ html: data.err, classes: \"#c62828 red darken-3\" });\r\n        } else {\r\n            localStorage.setItem(\"jwt\", data.token);\r\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n            dispatch({ type: \"USER\", payload: data.user });\r\n            M.toast({\r\n                html: \"Login successfull.\",\r\n                classes: \"#43a047 green darken-1\",\r\n            });\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-card\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input type=\"text\" placeholder=\"E-mail\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick={async () => {\r\n                        await signIn();\r\n                    }}\r\n                >\r\n                    Login\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signup\">Don't have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { GET } from \"../util/methods\";\r\nimport { UserContext } from \"./../App\";\r\nconst Profile = () => {\r\n    const [myposts, setMyPosts] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let data = await GET(\"/mypost\");\r\n            setMyPosts(data.posts);\r\n        }\r\n        getData();\r\n    });\r\n    return (\r\n        <div\r\n            style={{\r\n                maxWidth: \"80%\",\r\n                margin: \"0px auto\",\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-around\",\r\n                    margin: \"18px 0px\",\r\n                    borderBottom: \"1px solid grey\",\r\n                }}\r\n            >\r\n                <div>\r\n                    <img\r\n                        style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                        src=\"https://images.unsplash.com/photo-1588288335249-314f506ee38c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4> {state ? state.name : \"\"}</h4>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            margin: \"18px 0px\",\r\n                            width: \"108%\",\r\n                        }}\r\n                    >\r\n                        <h6>40 posts</h6>\r\n                        <h6>456 followers</h6>\r\n                        <h6>134 following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {myposts.map((post) => {\r\n                    return <img id={post._id} className=\"item\" src={post.photo} alt={post.title} />;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport { emailRegex } from \"./../util/validation\";\r\nimport { POST } from \"./../util/methods\";\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory();\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    async function signUp() {\r\n        if (!emailRegex.test(email)) {\r\n            M.toast({ html: \"Invalid email\", classes: \"#c62828 red darken-3\" });\r\n            return;\r\n        }\r\n\r\n        let data = await POST(\"/signup\", {\r\n            name,\r\n            email,\r\n            password,\r\n        });\r\n\r\n        if (data.err) {\r\n            M.toast({ html: data.err, classes: \"#c62828 red darken-3\" });\r\n        } else {\r\n            M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n            history.push(\"/signin\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"my-card\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                <input type=\"text\" placeholder=\"E-mail\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button\r\n                    onClick={async () => {\r\n                        await signUp();\r\n                    }}\r\n                    className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                >\r\n                    Sign Up\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport { POST } from \"./../util/methods\";\r\n\r\nconst CreatePost = () => {\r\n    const history = useHistory();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [body, setBody] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            async function createPost() {\r\n                return await POST(\"/createpost\", {\r\n                    title,\r\n                    body,\r\n                    url,\r\n                });\r\n            }\r\n            let post = createPost();\r\n            if (post.error) {\r\n                M.toast({ html: post.error, classes: \"#c62828 red darken-3\" });\r\n            } else {\r\n                M.toast({ html: \"Post created successfully.\", classes: \"#43a047 green darken-1\" });\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n    }, [url]);\r\n    async function postDetails() {\r\n        const data = new FormData();\r\n        data.append(\"file\", image);\r\n        data.append(\"upload_preset\", \"insta-clone\");\r\n        data.append(\"cloud_name\", \"dcooom6tq\");\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/dcooom6tq/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n        })\r\n            .then((res) => res.json())\r\n            .then((res) => setUrl(res.url))\r\n            .catch((e) => console.log(e));\r\n    }\r\n    return (\r\n        <div\r\n            className=\"card input-field\"\r\n            style={{\r\n                margin: \"30px auto\",\r\n                maxWidth: \"500px\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\",\r\n            }}\r\n        >\r\n            <input type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"Body\" onChange={(e) => setBody(e.target.value)} value={body} />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn  #64b5f6 blue darken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button\r\n                className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={async () => {\r\n                    await postDetails();\r\n                }}\r\n            >\r\n                Submit Post\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePost;\r\n","export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n    if (action.type == \"USER\") {\r\n        return action.payload;\r\n    }\r\n    if (action.type == \"CLEAR\") {\r\n        return null;\r\n    }\r\n    return state;\r\n};\r\n","import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport SignIn from \"./routes/SignIn\";\nimport Profile from \"./routes/Profile\";\nimport SignUp from \"./routes/SignUp\";\nimport CreatePost from \"./routes/CreatePost\";\nimport { initialState, reducer } from \"./reducers/userReducer\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n    const history = useHistory();\n    const { dispatch } = useContext(UserContext);\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        if (user) {\n            dispatch({ type: \"USER\", payload: user });\n            // history.push(\"/\");\n        } else {\n            history.push(\"/signin\");\n        }\n    }, []);\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route path=\"/profile\">\n                <Profile />\n            </Route>\n            <Route path=\"/signin\">\n                <SignIn />\n            </Route>\n            <Route path=\"/signup\">\n                <SignUp />\n            </Route>\n            <Route path=\"/create\">\n                <CreatePost />\n            </Route>\n        </Switch>\n    );\n};\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <UserContext.Provider value={{ state, dispatch }}>\n            <BrowserRouter>\n                <Navbar />\n                <Routing />\n            </BrowserRouter>\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}